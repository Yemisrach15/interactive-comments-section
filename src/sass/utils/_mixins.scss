@use 'sass:map';

// Prefixes colors with '--' for use as css variables and maps with values
@mixin color-vars($colors) {
  @each $color-key, $color-value in $colors {
    --#{$color-key}: #{$color-value};
  }
}

// Generates media queries with min-width and max-width(if not null)
@mixin adapt-screen($min-width, $max-width: null) {
  @if (map.has-key($screens, $min-width) == false) {
    @error "Valid values for the first argument(min-width) of mixin adapt-screen are #{map.keys($screens)}";
  }

  @if ($max-width != null and map.has-key($screens, $max-width) == false) {
    @error "Valid values for the second argument(max-width) of mixin adapt-screen are #{map.keys($screens)}";
  }

  @if ($max-width == null) {
    @media screen and (min-width: map.get($screens, $min-width)) {
      @content;
    }
  } @else {
    @media screen and (min-width: map.get($screens, $min-width)) and (max-width: map.get($screens, $max-width)) {
      @content;
    }
  }
}
